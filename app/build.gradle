plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

// sensitive data read
def noKeyFound = '"NO_KEY_FOUND"'
def theMovieDbApiKey = noKeyFound
def sensitiveDataFile = file('../sensitive_data.txt')
Properties sensitiveData = new Properties()

if (sensitiveDataFile.canRead()) {
    // Read the sensitive data from file sensitive_data.txt
    sensitiveData.load(new FileInputStream(sensitiveDataFile))
    if (sensitiveData != null) {
        if (sensitiveData.containsKey('theMovieDbApiKey')) {
            theMovieDbApiKey = sensitiveData['theMovieDbApiKey']
        }
    }
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.nfragiskatos.tmdbclient_class"
        minSdk 26
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "THEMOVIEDB_API_KEY", theMovieDbApiKey
        resValue "string", "THEMOVIEDB_API_KEY", theMovieDbApiKey
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    def lifecycle_version = "2.4.0-beta01"
    def arch_version = "2.1.0"
    def room_version = "2.3.0"
    def coroutine_version = "1.5.2"
    def dagger_version = "2.38.1"
    def retrofit_version = "2.9.0"
    def interceptor_version = "4.9.1"
    def glide_version = "4.12.0"


    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")

    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")

    // Room
    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    kapt("androidx.room:room-compiler:$room_version")

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Dagger2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Retrofit + GSON + OkHttp Logging Interceptor
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation("com.squareup.okhttp3:logging-interceptor:$interceptor_version")

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
}